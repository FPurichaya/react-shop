stages:
  - build
  - test
  - deploy api
  - deploy client

build api:
  stage: build
  environment:
    name: staging
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  services:
    - docker:dind
  before_script:
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
  script:
    - aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REGISTRY
    - docker build -t $ECR_REGISTRY/$PROJECT_NAME:$CI_COMMIT_REF_NAME-$CI_JOB_ID -t $ECR_REGISTRY/$PROJECT_NAME:latest -f api/Dockerfile ./api
    - docker push $ECR_REGISTRY/$PROJECT_NAME
  only:
    - develop
    - merge_requests

deploy api:
  stage: deploy api
  environment:
    name: staging
  image: registry.gitlab.com/gitlab-org/cloud-deploy/aws-base:latest 
  before_script:
    - chmod +x ./deploy.sh
  script:
    - ./deploy.sh
  only:
    - develop  

build client:
  stage: build
  environment: 
    name: staging
  image: node:10-alpine
  script:
    - cd client
    - yarn install
    - yarn build
  artifacts:
    paths:
      - ./client/build
  only:
    - develop
    - merge_requests

deploy client:
  stage: deploy client
  environment: 
    name: staging
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  script:
    - cd ./client/build
    - aws s3 sync . s3://$AWS_S3_WEB_BUCKET/
  only:
    - develop

test api:
  stage: test
  environment:
    name: staging
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  services:
    - docker:dind
  before_script:
    - amazon-linux-extras install docker
    - aws --version
    - docker --version
  script:
    - docker-compose up -d mongo mongo_seed
    - aws ecr get-login-password | docker login --username AWS --password-stdin $ECR_REGISTRY
    - IMAGE_TAG=$CI_COMMIT_REF_NAME-$CI_JOB_ID docker-compose pull api
    - docker-compose up -d api
    - curl localhost:2370/api/authgames | grep "Sample Game"
  only:
    - develop
    - merge_requests

test client:
  stage: test
  environment:
    name: staging
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  services:
    - docker:dind
  script:
    - docker-compose up -d web
    - curl -I localhost:9090 | grep "HTTP/1.1 200 OK"