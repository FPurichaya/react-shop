stages:
  - build api
  - build client
  - test api
  - test client
  - deploy api
  - deploy client

build api:
  stage: build api
  environment:
    name: staging
  image: docker:19.03
  services:
    - docker:19.03-dind
  before_script:
    - apk add --no-cache python3 py-pip
    - pip install -U pip
    - pip install awscli
  script:
    - $(aws ecr get-login --no-include-email --region eu-west-1)
    - docker build -t $ECR_REGISTRY/$PROJECT_NAME:$CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA -t $ECR_REGISTRY/$PROJECT_NAME:latest -f api/Dockerfile ./api
    - docker push $ECR_REGISTRY/$PROJECT_NAME
  only:
    - develop

deploy api:
  stage: deploy api
  environment:
    name: staging
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  before_script:
    - chmod +x ./deploy.sh
  script:
    - ./deploy.sh
  only:
    - develop  

build client:
  stage: build client
  environment: 
    name: staging
  image: node:10-alpine
  script:
    - cd client
    - yarn install
    - yarn build
  artifacts:
    paths:
      - ./client/build
  only:
    - develop

deploy client:
  stage: deploy client
  environment: 
    name: staging
  image: 
    name: amazon/aws-cli
    entrypoint: [""]
  script:
    - cd ./client/build
    - aws s3 sync . s3://$AWS_S3_WEB_BUCKET/
  only:
    - develop

test api:
  stage: test api
  environment:
    name: staging
  image: docker:19.03
  services:
    - docker:19.03-dind
  before_script:
    - apk add --no-cache python3 py-pip curl docker-compose
    - pip install -U pip
    - pip install awscli
  script:
    - docker-compose up -d mongo mongo_seed
    - HOST="mongo" PORT="27017" docker-compose --no-ansi run --rm wait-for
    - $(aws ecr get-login --no-include-email --region eu-west-1)
    - IMAGE_TAG=$CI_COMMIT_REF_NAME-CI_COMMIT_SHORT_SHA docker-compose pull api
    - docker-compose up -d api
    - HOST="api" PORT="2370" docker-compose --no-ansi run --rm wait-for
    - curl localhost:2370/api/authgames | grep "Sample Game"
  only:
    - develop

test client:
  stage: test client
  environment:
    name: staging
  image: docker:19.03
  services:
    - docker:19.03-dind
  before_script:
    - apk add --no-cache curl docker-compose
  script:
    - docker-compose up -d web
    - HOST="web" PORT="9090" docker-compose --no-ansi run --rm wait-for
    - curl -I localhost:9090 | grep "HTTP/1.1 200 OK"
  only:
    - develop